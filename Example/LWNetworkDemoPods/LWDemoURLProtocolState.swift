import Foundation
final class LWDemoURLProtocolState { static let shared = LWDemoURLProtocolState(); private init(){} ; private let lock = NSLock(); private var _registered=false; private var _hit:[String:Int]=[:]; private var _did401:Set<String> = []; private var _etag="\"abc\"" ; var registered:Bool { lock.lock(); defer{lock.unlock()}; return _registered } ; func setRegistered(){ lock.lock(); _registered = true; lock.unlock() } ; func bump(_ key:String){ lock.lock(); _hit[key, default:0] += 1; lock.unlock() } ; func hits(for key:String)->Int{ lock.lock(); defer{lock.unlock()}; return _hit[key] ?? 0 } ; func should401Once(for url:String)->Bool { lock.lock(); defer{lock.unlock()}; let first = !_did401.contains(url); if first { _did401.insert(url) } ; return first } ; func etag()->String { lock.lock(); defer{lock.unlock()}; return _etag } }
